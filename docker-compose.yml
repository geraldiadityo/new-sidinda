version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-service
    ports:
      - "3000:3000"
    networks:
      - frontend-network
    depends_on:
      - backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-service
    env_file:
      - .env.backend
    networks:
      - frontend-network
      - backend-network
    depends_on:
      mypostgres:
        condition: service_healthy
      myredis:
        condition: service_healthy
  mypostgres:
    image: postgres:13
    container_name: postgres_db_internal
    env_file:
      - .env.db
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "127.0.0.1:5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - backend-network
  myredis:
    image: redis7:alpine
    container_name: my-redis-cache
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis-data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  postgres:

networks:
  frontend-network:
    driver: bridge
  backend-network:
    driver: bridge
